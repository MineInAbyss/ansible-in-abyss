- hosts: undeployed
  remote_user: admin
  become: true
  vars:
    server_dir: "/home/{{ item.name }}/server"
    paper_url: https://papermc.io/api/v1/paper/1.16.4/288/download
    admins:
      - offz
      - derongan
  handlers:
    - name: force password change
      command: "passwd -de {{ item.name }}"
      when: item.changed
      loop: "{{ accounts.results }}"
  roles:
    - role: lean_delivery.java
      java_distribution: corretto
      transport: fallback
      java_major_version: 8
  tasks:
    - name: Create users and home directory for each server
      user:
        name: "{{ item.name }}"
        state: present
      with_items: "{{ servers }}"

    - name: Create users for each admin, adding them to sudo and all server groups
      user:
        name: "{{ item }}"
        state: present
        groups: "{{ ['sudo'] + servers|map(attribute='name')|list }}"
        append: true
      register: accounts
      notify: force password change
      with_items: "{{ admins }}"

    - name: Add authorized key for each admin
      authorized_key:
        user: "{{ item }}"
        key: "{{ lookup('file', 'config/ssh_pub_key/{{ item }}.pub') }}"
        state: present
      with_items: "{{ admins }}"



    - name: Make server directories
      file:
        path: "{{ server_dir }}"
        state: directory
      with_items: "{{ servers }}"

    - name: Create start.sh script for each server with correct ram allocation
      template:
        src: "config/start.sh"

        dest: "{{ server_dir }}"
      with_items: "{{ servers }}"

    - name: Download paper jar
      get_url:
        url: "{{ paper_url }}"
        dest: "{{ server_dir }}/paper.jar"
      with_items: "{{ servers }}"

    - name: Copy server config files to each server
      copy:
        src: config/files/
        dest: "{{ server_dir }}"
      with_items: "{{ servers }}"

    - name: Ensure file permissions set properly for each server
      file:
        path: "{{ server_dir }}"
        owner: "{{ item.name }}"
        group: "{{ item.name }}"
        mode: "774"
        recurse: true
      with_items: "{{ servers }}"


    - name: Copy minecraft service file into systemd's services folder
      copy:
        src: config/services/minecraft@.service
        dest: /etc/systemd/system/minecraft@.service

    - name: Enable the service for each server
      systemd:
        name: "minecraft@{{ item.name }}"
        enabled: true
      with_items: "{{ servers }}"
